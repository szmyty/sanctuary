######################################################################
# @Project      : Sanctuary
# @File         : buildkitd.toml
# @Description  : Configuration file for BuildKit with custom settings
#                 for debugging, logging, and worker configurations.
#                 All settings have been customized to show default
#                 values and include detailed comments for each option.
#
# @Author       : Alan Szmyt
# @Date         : 2024-09-07
# @Version      : 1.0
# @References   :
#   - https://docs.docker.com/build/buildkit/toml-configuration/
######################################################################

# Enable or disable additional debug logging (default is false)
debug = true

# Enable or disable additional trace logging (very verbose, may impact performance)
trace = false

# Root directory where all BuildKit state is stored (default: "/var/lib/buildkit")
root = "/var/lib/buildkit"

# Insecure entitlements allow certain insecure operations (disabled by default)
# Possible values: "network.host", "security.insecure"
insecure-entitlements = []

# Logging section configuration
[log]
  # Log formatter type. Available values: "json", "text" (default: "text")
  format = "text"

# DNS configuration for container builds
[dns]
  # DNS nameservers for containers (default: system resolvers)
  nameservers = ["1.1.1.1", "8.8.8.8"]
  # Additional DNS options (default: empty)
  options = ["edns0"]
  # DNS search domains for containers (default: empty)
  searchDomains = ["example.com"]

# gRPC server configuration for BuildKit
[grpc]
  # gRPC address (default: system assigned address)
  address = [ "tcp://0.0.0.0:1234" ]
  # Address for attaching debuggers or profiles (default: no debug address)
  debugAddress = "0.0.0.0:6060"
  # User ID for the gRPC server (default: 0, root)
  uid = 0
  # Group ID for the gRPC server (default: 0, root)
  gid = 0

  # TLS configuration for gRPC server
  [grpc.tls]
    # Path to the TLS certificate file (default: empty)
    # cert = "/etc/buildkit/tls.crt"
    # Path to the TLS private key (default: empty)
    # key = "/etc/buildkit/tls.key"
    # Path to the TLS CA file (default: empty)
    # ca = "/etc/buildkit/tlsca.crt"

# OpenTelemetry configuration for BuildKit tracing
[otel]
  # Path to OpenTelemetry collector socket (default: not set)
  # socketPath = "/run/buildkit/otel-grpc.sock"

# Build history configuration for completed builds
[history]
  # Maximum age of build history entries in seconds (default: 172800)
  maxAge = 172800
  # Maximum number of build history entries to keep (default: 50)
  maxEntries = 50

# OCI worker configuration (used for OCI images)
[worker.oci]
  # Enable the OCI worker (default: true)
  enabled = true
  # Platforms supported by the OCI worker, autodetected if unset
  platforms = ["linux/amd64", "linux/arm64"]
  # Snapshotter type for OCI images (default: "auto")
  snapshotter = "auto"
  # Enable or disable rootless mode (default: false)
  rootless = false
  # Disable process sandboxing for OCI worker (default: false)
  noProcessSandbox = false
  # Enable garbage collection for OCI worker (default: true)
  gc = true
  # Disk space to keep during garbage collection (default: 9000 bytes)
  gckeepstorage = 9000
  # Custom OCI worker binary path (default: empty)
  # binary = ""
  # AppArmor profile to constrain build containers (default: empty)
  # apparmor-profile = ""
  # Maximum parallel build steps (default: 4)
  max-parallelism = 4
  # Size of CNI pool for network namespaces (default: 16)
  cniPoolSize = 16

  # OCI worker labels for metadata
  # [worker.oci.labels]
  #   "foo" = "bar"

  # Garbage collection policies for OCI worker
  [[worker.oci.gcpolicy]]
    # Keep bytes for the garbage collection policy (default: 512MB)
    keepBytes = "512MB"
    # Duration to keep data for garbage collection (default: 48 hours)
    keepDuration = "48h"
    filters = [ "type==source.local", "type==exec.cachemount", "type==source.git.checkout" ]

  [[worker.oci.gcpolicy]]
    all = true
    keepBytes = 1024000000

# Containerd worker configuration (used for containerd runtime)
[worker.containerd]
  # Path to the containerd socket (default: "/run/containerd/containerd.sock")
  address = "/run/containerd/containerd.sock"
  # Enable the containerd worker (default: true)
  enabled = true
  # Supported platforms for containerd (default: autodetect)
  platforms = ["linux/amd64", "linux/arm64"]
  # Namespace for containerd (default: "buildkit")
  namespace = "buildkit"
  # Enable garbage collection for containerd (default: true)
  gc = true
  # Storage space to keep during garbage collection (default: 9000 bytes)
  gckeepstorage = 9000
  # Size of CNI pool for network namespaces (default: 16)
  cniPoolSize = 16
  # Cgroup parent for containers (default: "buildkit")
  defaultCgroupParent = "buildkit"

  # Containerd worker labels for metadata
  [worker.containerd.labels]
    "foo" = "bar"

  # Runtime configuration for containerd
  [worker.containerd.runtime]
    # Runtime for containerd (default: "io.containerd.runc.v2")
    name = "io.containerd.runc.v2"
    # Path to containerd runtime (default: empty)
    path = "/path/to/containerd/runc/shim"
    # Additional options for the runtime (default: none)
    options = { BinaryName = "runc" }

  # Garbage collection policies for containerd
  [[worker.containerd.gcpolicy]]
    keepBytes = 512000000
    keepDuration = 172800
    filters = [ "type==source.local", "type==exec.cachemount", "type==source.git.checkout" ]

  [[worker.containerd.gcpolicy]]
    all = true
    keepBytes = 1024000000

# Registry configuration for Docker registries
[registry."docker.io"]
  # Registry mirrors for Docker Hub (default: none)
  mirrors = ["yourmirror.local:5000", "core.harbor.domain/proxy.docker.io"]
  # Allow HTTP connections for registry (default: false)
  http = true
  # Allow insecure connections to registry (default: false)
  insecure = true
  # Path to CA certificates for the registry (default: empty)
  ca = ["/etc/config/myca.pem"]

  # Registry keypair for TLS
  [[registry."docker.io".keypair]]
    key = "/etc/config/key.pem"
    cert = "/etc/config/cert.pem"

# Mirror registry configuration
[registry."yourmirror.local:5000"]
  # Allow HTTP connections for this registry (default: false)
  http = true

# Dockerfile frontend configuration
[frontend."dockerfile.v0"]
  # Enable the Dockerfile frontend (default: true)
  enabled = true

# Gateway frontend configuration
[frontend."gateway.v0"]
  # Enable the gateway frontend (default: true)
  enabled = true
  # Repositories allowed for gateway sources (default: empty, allow all)
  allowedRepositories = []

# System-wide settings
[system]
  # How often to scan for changes in emulated platforms (default: "1h")
  platformsCacheMaxAge = "1h"
