---
######################################################################
# @Project      : sanctuary
# @File         : common.yml
# @Description  : Common Docker Compose settings shared across all
#                 containers in the project. This file defines standard
#                 labels, environment variables, and other shared settings
#                 to ensure uniformity and consistency across the setup.
#
# @Author       : Alan Szmyt
# @Date         : 2024-08-22
# @Version      : 1.0
######################################################################

# Define common labels for Docker objects
x-labels: &labels
  labels:
    app.name: ${COMPOSE_PROJECT_NAME} # Name of the application, set using the Compose project name

# Shared settings for all containers
x-settings: &settings
  extra_hosts:
    - "host.docker.internal:host-gateway"
  # Restart the container unless it was explicitly stopped by the user
  restart: unless-stopped
  # Load environment variables from the common.env file
  env_file:
    - common.env
  # No proxy setting for the entire environment (handles proxy settings internally)
  environment:
    - no_proxy="*"
    - NO_PROXY="*"
  # Attach the container to the project network defined in the network.yml file
  networks:
    default:
      aliases:
        - ${COMPOSE_PROJECT_NAME}-network
  init: true
  pull_policy: missing
  attach: true

  # DNS options for containers
  # dns_opt:
  #   - use-vc
  #   - no-tld-query
  #   - single-request
  #   - rotate
  #   - timeout:2

  # Platform specification for building container images
  # platform: linux/arm64

# Define common build settings for services using Docker
x-build: &build_defaults
  context: .
  dockerfile: Dockerfile
  # platforms:
  #   - "linux/arm64"

  # Whether to pull the latest version of the image
  pull: false

  # Whether to use the cache during the build
  no_cache: true

  # Whether the build process is executed in a privileged container
  privileged: false

  # SSH options for the build (commented out)
  # ssh: ["default"]

  # Inherit common labels
  <<: *labels

# Define a common service template that other services can inherit from
services:
  common:
    # Inherit all common settings defined above
    <<: *settings
    build:
      <<: *build_defaults
