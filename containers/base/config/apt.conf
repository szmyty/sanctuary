######################################################################
# @Project      : sanctuary
# @File         : apt.conf
# @Description  : Configuration file for APT to enforce best practices
#                 during Docker builds. This configuration ensures minimal
#                 image size and secure package installation by following
#                 recommended practices.
#                 See: https://manpages.ubuntu.com/manpages/focal/en/man5/apt.conf.5.html
#
# @Author       : Alan Szmyt
# @Date         : 2024-08-22
# @Version      : 1.0
######################################################################

# This group of options controls general APT behavior as well as holding the options for all of the tools.
APT {
    # Automatically clean up installed packages to save disk space.
    Clean-Installed {
        "true";
    };

    # Immediately configure all packages after unpacking.
    Immediate-Configure {
        "true";
    };

    # Do not force the breaking of package dependency loops during installation.
    Force-LoopBreak {
        "false";
    };

    # Disable installation of recommended packages by default to reduce image size.
    Install-Recommends {
        "false";
    };

    # Disable installation of suggested packages by default to keep the system lean.
    Install-Suggests {
        "false";
    };

    # Remove unused package dependencies aggressively.
    AutoRemove {
        SuggestsImportant {
            "false";
        };
    };

    Get {
        # Do not install recommended packages by default (redundant, but kept for clarity).
        Install-Recommends {
            "false";
        };

        # Do not install suggested packages by default (redundant, but kept for clarity).
        Install-Suggests {
            "false";
        };

        # Automatically assume "yes" to all prompts, ensuring non-interactive behavior.
        Assume-Yes {
            "true";
        };

        # Suppress output for quieter logs during package operations.
        Quiet {
            "true";
            Acquire {
                "true";
            };
        };
    };

    Update {
        # Suppress output during package updates for a cleaner build process.
        Quiet {
            "true";
            Acquire {
                "true";
            };
        };

        # Create a timestamp before running an update, useful for debugging and tracking.
        Pre-Invoke {
            "date -u > /var/lib/apt/pre-update-stamp";
        };

        # Create a timestamp after an update and clean up package cache.
        Post-Invoke {
            "date -u > /var/lib/apt/post-update-stamp && rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true";
        };
    };

    Sandbox {
        # Ensure that APT operations run as the root user, as expected in Docker environments.
        User {
            "root";
        };
    };
};

Acquire {
    # Allow TLS/SSL for HTTP(S) connections.
    AllowTLS {
        "true";
    };

    # Enable the use of patch diffs to reduce download sizes.
    PDiffs {
        "true";
    };

    # Enable the By-Hash method to fetch package indexes, which ensures data integrity.
    By-Hash {
        "true";
    };

    # Controls how APT handles downloading files. The default mode is "host".
    Queue-Mode {
        "host";
    };

    # Number of times APT should retry a failed download.
    Retries {
        "3";
    };

    # Use symlinks for source packages by default.
    Source-Symlinks {
        "true";
    };

    # Specifies the minimum amount of time (in seconds) that a package list must be valid for before APT considers it expired.
    # Uncomment and set this option if needed.
    # Min-ValidTime "0";  # seconds

    # Specifies the maximum amount of time (in seconds) that a package list can be considered valid before APT forces a refresh.
    # Uncomment and set this option if needed.
    # Max-ValidTime "86400";  # seconds (24 hours)

    # Enable checking of the "Valid-Until" field in the Release file to ensure it is still valid.
    Check-Valid-Until {
        "true";
    };

    # Defines the maximum amount of time (in seconds) into the future that APT will allow for a package list's "Valid-Until" field.
    Max-FutureTime {
        "86400";  # seconds (24 hours)
    };

    # Specifies whether APT should check the date on the system against the date of the release file.
    Check-Date {
        "true";
    };

    # Disable the download of translation files to minimize download size and time.
    Languages {
        "none";
    };

    # Enable gzipped indexes to save disk space.
    GzipIndexes {
        "true";
    };

    # Use gzipped compression for package indexes to optimize storage.
    CompressionTypes {
        Order {
            "gz";
        };
    };

    # Force APT to use IPv4 for network connections.
    ForceIPv4 {
        "false";
    };

    # Force APT to use IPv6 for network connections. Typically false in Docker.
    ForceIPv6 {
        "false";
    };

    # Set the maximum allowed size for Release files to 10MB (10485760 bytes).
    MaxReleaseFileSize {
        "10485760";  # 10MB
    };

    # Enable the use of SRV records to find the appropriate repository.
    EnableSrvRecords {
        "true";
    };

    # Do not allow APT to use insecure repositories.
    AllowInsecureRepositories {
        "false";
    };

    # Do not allow APT to use weak repositories.
    AllowWeakRepositories {
        "false";
    };

    # Prevent downgrading to insecure repositories.
    AllowDowngradeToInsecureRepositories {
        "false";
    };

    https {
        # Directly connect to example.org, bypassing any proxy.
        # Uncomment and set this option if needed.
        # Proxy::example.org "DIRECT";

        # Use a specific proxy for HTTPS connections.
        # Uncomment and set this option if needed.
        # Proxy "socks5h://apt:pass@127.0.0.1:9050";

        # Use a custom script to automatically detect the proxy.
        # Uncomment and set this option if needed.
        # Proxy-Auto-Detect "/usr/local/bin/apt-https-proxy-auto-detect";

        # Disable caching to ensure always retrieving the latest data.
        No-Cache {
            "true";
        };

        # Set the maximum age (in seconds) of cached responses.
        # Uncomment and set this option if needed.
        # Max-Age "3600";

        # Prevent storing responses to disk.
        No-Store {
            "true";
        };

        # Set the timeout (in seconds) for HTTPS connections.
        Timeout {
            "10";
        };

        # Limit the download speed (in KB/s).
        # Uncomment and set this option if needed.
        # Dl-Limit "42";

        # Disable HTTP pipelining for connections.
        # Pipeline-Depth {
        #     "0";
        # };

        # Disable redirects for HTTPS connections.
        # AllowRedirect {
        #     "false";
        # };

        # Set a custom user-agent for HTTPS requests.
        # Uncomment and set this option if needed.
        # User-Agent "My APT-HTTPS";

        # Disable sending the "Accept" header in requests.
        # Uncomment and set this option if needed.
        # SendAccept "false";

        # Path to the Certificate Authority (CA) file.
        # Uncomment and set this option if needed.
        # CAInfo "/path/to/ca/certs.pem";

        # Path to the Certificate Revocation List (CRL) file.
        # Uncomment and set this option if needed.
        # CRLFile "/path/to/all/crl.pem";

        # Enable peer verification.
        Verify-Peer {
            "true";
        };

        # Disable host verification for specific hosts.
        # Uncomment and set this option if needed.
        # Verify-Host::broken.example.org "false";

        # Path to the client SSL certificate for specific hosts.
        # Uncomment and set this option if needed.
        # SSLCert::example.org "/path/to/client/cert.pem";

        # Path to the client SSL key for specific hosts.
        # Uncomment and set this option if needed.
        # SSLKey::example.org "/path/to/client/key.pem";
    };
};

Dir {
    # Do not store package lists and source package lists to save disk space.
    Cache {
        pkgcache {
            "";
        };
        srcpkgcache {
            "";
        };
    };
};

DPKg {
    # Post-installation hook to remove cached .deb files and clear package archives.
    Post-Invoke {
        "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true";
    };
};
